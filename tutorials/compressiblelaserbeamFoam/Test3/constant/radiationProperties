/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2006                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "constant";
    object      radiationProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

radiation       off;

radiationModel  laserDTRM;

solverFreq 1;

mode	"Gaussian";
nTheta	100;
nr 		10;
//maxTrackLength 	0.050;
	
//focalLaserPosition constant (0.002 0.0085 0.002);

// Implementation of the moving heat source
focalLaserPosition table
(
	(0	  (0.0020 0.005 0.003))
	(1.00 (0.0020 0.005 0.003))
);	


laserDirection constant 	(0 -1 0.5);

focalLaserRadius		0.00050;   // 1.4*sigma
sigma					0.00020;
laserPower				1000;   //350;

absorptionEmissionModel localDensityAbsorptionEmission;

localDensityAbsorptionEmissionCoeffs
{
	alphaNames 	(alpha.air 	alpha.metal1		alpha.metal2);
	aCoeff 		(0 			 	4e5				4e5);
	eCoeff 		(0			 	0				0);
	ECoeff 		(0 				0				0);
}

//alphaCut	0.10;   // the limit for the cell to be filler which is treated as reflection cell?

scatterModel    none;
sootModel       none;
transmissivityModel none;

reflectionModel 	FresnelLaser;
//reflectionModel 	none;  // Dummy scatter model for 'none'

reflectionModel
(
	(air and metal1)
	{
    		type            FresnelLaser;
    		epsilon         0.25;     		//0.35  (Not here, change in the DTRM file)
	}
	
	(air and metal2)
	{
    		type            FresnelLaser;
    		epsilon         0.25;     		//0.35  (Not here, change in the DTRM file)
	}
	/*
	(gas and liquid)  // Based on Cho et al.
	{
		type		FresnelLaser;
		epsilon		0.25;
	} 
	*/
	
);


// ************************************************************************* //










